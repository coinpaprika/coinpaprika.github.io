coin_id:
  name: coin_id
  in: path
  required: true
  schema:
    type: string
    example: btc-bitcoin

quotes:
  name: quotes
  in: query
  required: false
  description: >
    Comma separated list of quotes to return. Currently allowed values:  BTC, ETH, USD, EUR, PLN, KRW, GBP, CAD, JPY, RUB, TRY, NZD, AUD, CHF, UAH, HKD, SGD, NGN, PHP, MXN, BRL, THB, CLP, CNY, CZK, DKK, HUF, IDR, ILS, INR, MYR, NOK, PKR, SEK, TWD, ZAR, VND, BOB, COP, PEN, ARS, ISK
  schema:
    type: string
    default: USD
    example: USD,BTC


ohlcv_start:
  name: start
  in: query
  required: true
  description: >
    start point for historical data

    #### Supported formats:
       - RFC3999 (ISO-8601) eg. `2018-02-15T05:15:00Z`
       - Simple date (yyyy-mm-dd) eg. `2018-02-15`
       - Unix timestamp (in seconds) eg. `1518671700`
  schema:
    type: string

ohlcv_end:
  name: end
  in: query
  required: false
  description: >
    end point for ohlcv (max 1 year)

    #### Supported formats:
       - RFC3999 (ISO-8601) eg. `2018-02-15T05:15:00Z`
       - Simple date (yyyy-mm-dd) eg. `2018-02-15`
       - Unix timestamp (in seconds) eg. `1518671700`

     If not provided calculated by the limit parameter
  schema:
    type: string

ohlcv_limit:
  name: limit
  in: query
  required: false
  description: "limit of result rows (max `366`)"
  schema:
    type: integer
    default: 1

ohlcv_quote:
  name: quote
  in: query
  required: false
  description: "returned data quote (available values: `usd` `btc`)"
  schema:
    type: string
    default: usd

ohlcv_interval:
  name: interval
  in: query
  required: false
  description: "returned OHLCV point interval (available values: `15m`, `30m`, `1h`, `6h`, `12h`, `24h`)"
  schema:
    type: string
    default: 24h


coinpaprika_id:
  name: coinpaprika
  in: query
  required: false
  description: >
    Coinpaprika API ID of a coin you want to map to the other provider API IDs
  schema:
    type: string

coinmarketcap_id:
  name: coinmarketcap
  in: query
  required: false
  description: >
    Coinmarketcap API ID of a coin you want to map to the other provider API IDs
  schema:
    type: string

coingecko_id:
  name: coingecko
  in: query
  required: false
  description: >
    Coingecko API ID of a coin you want to map to the other provider API IDs
  schema:
    type: string

cryptocomapre_id:
  name: cryptocompare
  in: query
  required: false
  description: >
    Cryptocompare API ID of a coin you want to map to the other provider API IDs
  schema:
    type: string

isin_id:
  name: isin
  in: query
  required: false
  description: >
    [ISIN](https://www.isin.org/isin-for-cryptocurrency/) ID of a coin you want to map to the other provider API IDs
  schema:
    type: string

dti_id:
  name: dti
  in: query
  required: false
  description: >
    [Digital Token Identifier](https://www.iso.org/obp/ui/en/#iso:std:iso:24165:-2:ed-1:v1:en) of a coin you want to map to the other provider API IDs
  schema:
    type: string